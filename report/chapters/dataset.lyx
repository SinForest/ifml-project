#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Creating Datasets
\end_layout

\begin_layout Standard
Patrick Dammann (3144913)
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
For our used methods, a split of the data is required, which is why we have
 split up the data into three sets:
\end_layout

\begin_layout Description
training
\begin_inset space ~
\end_inset

set this is the data, that is used by all our models to learn
\end_layout

\begin_layout Description
validation
\begin_inset space ~
\end_inset

set this is used like a test set during training, to monitor improvements
 in training, or to make decisions over hyper-parameters
\end_layout

\begin_layout Description
test
\begin_inset space ~
\end_inset

set this is not touched until the very end, to ensure that none of the images
 in the test set have had even indirect influence on our models
\end_layout

\begin_layout Standard
Through all sets, the distribution of genres in the whole crawled data has
 been preserved, while weighting labels based on the amount of different
 genres a movie has.
 Example: a set contains:
\begin_inset Newline newline
\end_inset

movie A ('Action')
\begin_inset Newline newline
\end_inset

movie B ('Action', 'Drama', 'Comedy') and
\begin_inset Newline newline
\end_inset

movie C ('Comedy', 'Animation'),
\begin_inset Newline newline
\end_inset

and therefore contains 
\begin_inset Formula $1.\overline{3}$
\end_inset

 'Action', 
\begin_inset Formula $0.8\overline{3}$
\end_inset

 'Comedy', 
\begin_inset Formula $0.5$
\end_inset

 'Animation' and 
\begin_inset Formula $0.\overline{3}$
\end_inset

 'Drama'.
\end_layout

\begin_layout Standard
Distributing the genres equally would have been too big of a challenge,
 if it's even solvable with our data, so we kept the distribution of out
 data, hoping that it models the real world in a good way (since this distributi
on needs to come from somewhere).
\end_layout

\begin_layout Standard
The final dataset for us to work with contains overall 64353 images: 31520
 in the training set, 13522 in the validation set and 19311 in the test
 set.
\end_layout

\begin_layout Subsection
Dataset Classes
\end_layout

\begin_layout Standard
The pytorch library features classes to simplify the iteration over the
 dataset while preprocessing and augmenting the in parallel.
 
\end_layout

\begin_layout Standard
Our dataset class loads pictures from one subset (or all 3) on the fly from
 disk (since they might not all fit into the RAM completely), and transforms
 them into torch Tensors.
 It also has the ability to optionally resize and standardize them, apply
 light random augmentations (like turning, shift of hue or brightness),
 as well as outputting random crops (for training) or ten crops (for validating).
\end_layout

\end_body
\end_document
